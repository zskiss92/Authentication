// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Page.API.Data;

#nullable disable

namespace Page.API.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20221019164512_ForgottenPasswordUpdate")]
    partial class ForgottenPasswordUpdate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Page.API.Models.Authentication.EmailVerification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<Guid>("EmailId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("KeyCreated")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("VerificationKey")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("VerificationTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("EmailId");

                    b.ToTable("EmailVerifications");
                });

            modelBuilder.Entity("Page.API.Models.Authentication.ForgottenPassword", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<Guid>("EmailId")
                        .HasColumnType("char(36)");

                    b.Property<bool>("IsPasswordUpdated")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("KeyCreated")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("VerificationKey")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("VerificationTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("EmailId");

                    b.ToTable("ForgottenPasswords");
                });

            modelBuilder.Entity("Page.API.Models.Authentication.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("longblob");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("longblob");

                    b.Property<bool>("VerifiedEmail")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Page.API.Models.Authentication.EmailVerification", b =>
                {
                    b.HasOne("Page.API.Models.Authentication.User", "Email")
                        .WithMany()
                        .HasForeignKey("EmailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Email");
                });

            modelBuilder.Entity("Page.API.Models.Authentication.ForgottenPassword", b =>
                {
                    b.HasOne("Page.API.Models.Authentication.User", "Email")
                        .WithMany()
                        .HasForeignKey("EmailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Email");
                });
#pragma warning restore 612, 618
        }
    }
}
